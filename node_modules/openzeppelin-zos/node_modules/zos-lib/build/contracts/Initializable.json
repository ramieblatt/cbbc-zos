{
  "contractName": "Initializable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60606040523415600e57600080fd5b60ac8061001c6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063158ef93e146044575b600080fd5b3415604e57600080fd5b6054606e565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900460ff16815600a165627a7a72305820a9ab724329ae32459e9482cb2d589f29c8235fcb60cf3fd22533c0ff9f07e1310029",
  "deployedBytecode": "0x606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063158ef93e146044575b600080fd5b3415604e57600080fd5b6054606e565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900460ff16815600a165627a7a72305820a9ab724329ae32459e9482cb2d589f29c8235fcb60cf3fd22533c0ff9f07e1310029",
  "sourceMap": "314:300:10:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "314:300:10:-;;;;;;;;;;;;;;;;;;;;;;;;415:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\n\n/**\n * @title Initializable\n *\n * @dev Simple helper contract to support initialization outside of constructor.\n * @dev Use Migratable for more complex migration mechanisms.\n *\n * @dev Beware! It is the developer's responsibility to ensure an initializer\n * @dev is actually called.\n */\ncontract Initializable {\n\n  /**\n   * @dev changed to true when contract has been initialized\n   */\n  bool public initialized;\n\n  /**\n   * @dev used to decorate the initialization function of a contract\n   */\n  modifier isInitializer() {\n    require(!initialized);\n    _;\n    initialized = true;\n  }\n}\n",
  "sourcePath": "/home/frangio/zs/zos/lib/contracts/migrations/Initializable.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/zos/lib/contracts/migrations/Initializable.sol",
    "exportedSymbols": {
      "Initializable": [
        716
      ]
    },
    "id": 717,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 700,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Initializable\n * @dev Simple helper contract to support initialization outside of constructor.\n@dev Use Migratable for more complex migration mechanisms.\n * @dev Beware! It is the developer's responsibility to ensure an initializer\n@dev is actually called.",
        "fullyImplemented": true,
        "id": 716,
        "linearizedBaseContracts": [
          716
        ],
        "name": "Initializable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 702,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "scope": 716,
            "src": "415:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 701,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "415:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "549:63:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "563:12:10",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 705,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 702,
                          "src": "564:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 704,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1813,
                      "src": "555:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "555:21:10"
                },
                {
                  "id": 709,
                  "nodeType": "PlaceholderStatement",
                  "src": "582:1:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 710,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "589:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "603:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "589:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "589:18:10"
                }
              ]
            },
            "documentation": "@dev used to decorate the initialization function of a contract",
            "id": 715,
            "name": "isInitializer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:2:10"
            },
            "src": "524:88:10",
            "visibility": "internal"
          }
        ],
        "scope": 717,
        "src": "314:300:10"
      }
    ],
    "src": "0:615:10"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/zos/lib/contracts/migrations/Initializable.sol",
    "exportedSymbols": {
      "Initializable": [
        716
      ]
    },
    "id": 717,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 700,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Initializable\n * @dev Simple helper contract to support initialization outside of constructor.\n@dev Use Migratable for more complex migration mechanisms.\n * @dev Beware! It is the developer's responsibility to ensure an initializer\n@dev is actually called.",
        "fullyImplemented": true,
        "id": 716,
        "linearizedBaseContracts": [
          716
        ],
        "name": "Initializable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 702,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "scope": 716,
            "src": "415:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 701,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "415:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "549:63:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "563:12:10",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 705,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 702,
                          "src": "564:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 704,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1813,
                      "src": "555:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "555:21:10"
                },
                {
                  "id": 709,
                  "nodeType": "PlaceholderStatement",
                  "src": "582:1:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 710,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "589:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "603:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "589:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "589:18:10"
                }
              ]
            },
            "documentation": "@dev used to decorate the initialization function of a contract",
            "id": 715,
            "name": "isInitializer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:2:10"
            },
            "src": "524:88:10",
            "visibility": "internal"
          }
        ],
        "scope": 717,
        "src": "314:300:10"
      }
    ],
    "src": "0:615:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-17T18:16:35.363Z"
}